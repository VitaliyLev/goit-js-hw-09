{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,IAAM,CACJC,OAAQC,SAASC,cAAc,QAC/BC,gBAAiBF,SAASG,iBAAiB,UAG7C,IAAIC,EAAgB,KA8CpBN,IAAIC,OAAOM,iBAAiB,UA5C5B,SAAoCC,GAClCA,EAAEC,iBAEF,MAAMC,EAAaC,OAAOH,EAAEI,OAAOC,SAASC,MAAMC,OAC5CC,EAAYL,OAAOH,EAAEI,OAAOC,SAASI,KAAKF,OAC1CG,EAAcP,OAAOH,EAAEI,OAAOC,SAASM,OAAOJ,OAWpD,IAAIK,EAAQV,EACRW,EAAW,EACXC,EAAgB,EAEpBhB,EAAgBiB,aAAY,KA0B9B,IAAuBC,EAAUV,EAzB7BO,GAAY,EACZC,GAAiB,GAwBEE,EAtBLH,EAsBeP,EAtBLM,EAuBnB,IAAIK,SAAQ,CAACC,EAAUC,KACNC,KAAKC,SAAW,GAEpCH,EAAS,C,SAAEF,E,MAAUV,IAErBa,EAAW,C,SAAEH,E,MAAUV,GAAQ,KA3B9BgB,MAAK,EAACN,SAAEA,EAAQV,MAAEA,MACjBiB,EAAAjC,GAASkC,OAAOC,QACd,uBAAqBT,QAAiBV,MAAU,IAGnDoB,OAAM,EAACV,SAAEA,EAAQV,MAAEA,MAClBiB,EAAAjC,GAASkC,OAAOG,QACd,sBAAoBX,QAAeV,MAAU,IAI/CQ,GAAiBJ,EACnBkB,cAAc9B,GAGhBc,GAASJ,CAAS,GACjBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nref = {\n  formEl: document.querySelector('form'),\n  inputValueAllEl: document.querySelectorAll('input'),\n};\n\nlet setIntervalId = null;\n\nfunction handleSubmitCreatePromises(e) {\n  e.preventDefault();\n\n  const delayValue = Number(e.target.elements.delay.value);\n  const stepValue = Number(e.target.elements.step.value);\n  const amountValue = Number(e.target.elements.amount.value);\n\n  \n  // const {\n  //   elements: { delay, step, amount },\n  // } = e.currentTarget;\n\n  // const delayValue = Number(delay.value);\n  // const stepValue = Number(step.value);\n  // const amountValue = Number(amount.value);\n\n  let delay = delayValue;\n  let position = 0;\n  let intervalValue = 0;\n\n  setIntervalId = setInterval(() => {\n    position += 1;\n    intervalValue += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    if (intervalValue >= amountValue) {\n      clearInterval(setIntervalId);\n      return;\n    }\n    delay += stepValue;\n  }, stepValue);\n}\n\nref.formEl.addEventListener('submit', handleSubmitCreatePromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolves, rejecteded) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolves({ position, delay });\n    } else {\n      rejecteded({ position, delay });\n    }\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","ref","formEl","document","querySelector","inputValueAllEl","querySelectorAll","$47d4ff9957288465$var$setIntervalId","addEventListener","e","preventDefault","delayValue","Number","target","elements","delay","value","stepValue","step","amountValue","amount","delay1","position1","intervalValue","setInterval","position","Promise","resolves","rejecteded","Math","random","then","$parcel$interopDefault","Notify","success","catch","warning","clearInterval"],"version":3,"file":"03-promises.b79d7795.js.map"}